# MIT License, Copyright 2019 Samu Lang

@prefix : <http://example.com/> .

:fibonacci 
    a :Variable ;
    :type [
        :name "System.Func`2" ;
        :typeArguments (
            "System.Int64"
            "System.Int64"
        ) ;
    ] ;
.

:n 
    a :Parameter ;
    :type "System.Int64" ;
.

:s
    a :Block ;
    :variables (
        :fibonacci
    ) ;
    :expressions (
        [
            a :Assign ;
            :left :fibonacci ;
            :right [
                a :Lambda ;
                :parameters (
                    :n
                ) ;
                :body [
                    a :Condition ;
                    :test [
                        a :LessThan ;
                        :left :n ;
                        :right [
                            a :Constant ;
                            :value 2 ;
                        ] ;
                    ] ;
                    :ifTrue :n ;
                    :ifFalse [
                        a :Add ;
                        :left [
                            a :Invoke ;
                            :expression :fibonacci ;
                            :arguments (
                                [
                                    a :Subtract ;
                                    :left :n ;
                                    :right [
                                        a :Constant ;
                                        :value 2 ;
                                    ] ;
                                ]
                            ) ;
                        ] ;
                        :right [
                            a :Invoke ;
                            :expression :fibonacci ;
                            :arguments (
                                [
                                    a :Subtract ;
                                    :left :n ;
                                    :right [
                                        a :Constant ;
                                        :value 1 ;
                                    ] ;
                                ]
                            ) ;
                        ] ;
                    ] ;
                ] ;
            ] ;
        ]
        [
            a :Invoke ;
            :expression :fibonacci ;
            :arguments (
                [
                    a :Constant ;
                    :value 8 ;
                ]
            ) ;
        ]
    ) ;
.
