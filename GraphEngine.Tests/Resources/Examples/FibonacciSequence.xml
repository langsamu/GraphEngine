<?xml version="1.0" encoding="utf-8" ?>
<!-- MIT License, Copyright 2020 Samu Lang -->
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://example.com/" xmlns:ex="http://example.com/" xml:base="http://example.com/">
  <Block rdf:about="s">
    <blockVariables rdf:parseType="Collection">
      <Variable rdf:about="fibonacci">
        <parameterType>
          <Type ex:typeName="System.Func`2">
            <typeArguments rdf:parseType="Collection">
              <Type ex:typeName="System.Int64" />
              <Type ex:typeName="System.Int64" />
            </typeArguments>
          </Type>
        </parameterType>
      </Variable>
    </blockVariables>
    <blockExpressions rdf:parseType="Collection">
      <Binary>
        <binaryExpressionType rdf:resource="ExpressionTypes/Assign"/>
        <binaryLeft rdf:resource="fibonacci"/>
        <binaryRight>
          <Lambda>
            <lambdaParameters rdf:parseType="Collection">
              <Parameter rdf:about="n">
                <parameterType>
                  <Type ex:typeName="System.Int64" />
                </parameterType>
              </Parameter>
            </lambdaParameters>
            <lambdaBody>
              <Condition>
                <conditionTest>
                  <Binary>
                    <binaryExpressionType rdf:resource="ExpressionTypes/LessThan"/>
                    <binaryLeft rdf:resource="n"/>
                    <binaryRight>
                      <Constant>
                        <constantValue rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">2</constantValue>
                      </Constant>
                    </binaryRight>
                  </Binary>
                </conditionTest>
                <conditionIfTrue rdf:resource="n"/>
                <conditionIfFalse>
                  <Binary>
                    <binaryExpressionType rdf:resource="ExpressionTypes/Add"/>
                    <binaryLeft>
                      <Invoke>
                        <invokeExpression rdf:resource="fibonacci"/>
                        <invokeArguments rdf:parseType="Collection">
                          <Binary>
                            <binaryExpressionType rdf:resource="ExpressionTypes/Subtract"/>
                            <binaryLeft rdf:resource="n"/>
                            <binaryRight>
                              <Constant>
                                <constantValue rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">2</constantValue>
                              </Constant>
                            </binaryRight>
                          </Binary>
                        </invokeArguments>
                      </Invoke>
                    </binaryLeft>
                    <binaryRight>
                      <Invoke>
                        <invokeExpression rdf:resource="fibonacci"/>
                        <invokeArguments rdf:parseType="Collection">
                          <Unary>
                            <unaryExpressionType rdf:resource="ExpressionTypes/Decrement"/>
                            <unaryOperand rdf:resource="n"/>
                          </Unary>
                        </invokeArguments>
                      </Invoke>
                    </binaryRight>
                  </Binary>
                </conditionIfFalse>
              </Condition>
            </lambdaBody>
          </Lambda>
        </binaryRight>
      </Binary>
      <Invoke>
        <invokeExpression rdf:resource="fibonacci" />
        <invokeArguments rdf:parseType="Collection">
          <Constant>
            <constantValue rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">8</constantValue>
          </Constant>
        </invokeArguments>
      </Invoke>
    </blockExpressions>
  </Block>
</rdf:RDF>
