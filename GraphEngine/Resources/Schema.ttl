# Class comments mostly from https://docs.microsoft.com/en-us/dotnet/api/system.linq.expressions.expressiontype?view=netcore-3.0#fields

@prefix : <http://example.com/> .
@prefix this: <http://example.com/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

this:schema
	a owl:Ontology ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "schema" ;
	rdfs:comment "" ;
.

# Classes

:ArrayAccess
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Array access" ;
	rdfs:comment "" ;
.

:ArrayIndex
	a owl:Class ;
	rdfs:subClassOf :Binary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Array index" ;
	rdfs:comment "An indexing operation in a one-dimensional array, such as array[index] in C# or array(index) in Visual Basic." ;
.

:ArrayLength
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Array length" ;
	rdfs:comment "An operation that obtains the length of a one-dimensional array, such as array.Length." ;
.

:BaseBind
	a owl:Class ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Base bind" ;
	rdfs:comment "" ;
.

:BaseGoto
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Base goto" ;
	rdfs:comment "" ;
.

:Binary
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Binary" ;
	rdfs:comment "" ;
.

:Bind
	a owl:Class ;
	rdfs:subClassOf :BaseBind ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Bind" ;
	rdfs:comment "" ;
.

:Binder
	a owl:Class ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Binder" ;
	rdfs:comment "" ;
.

:Block
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Block" ;
	rdfs:comment "A block of expressions." ;
.

:Break
	a owl:Class ;
	rdfs:subClassOf :BaseGoto ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Break" ;
	rdfs:comment "" ;
.

:Call
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Call" ;
	rdfs:comment "A method call, such as in the obj.sampleMethod() expression." ;
.

:Case
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Case" ;
	rdfs:comment "" ;
.

:Catch
	a owl:Class ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Catch" ;
	rdfs:comment "" ;
.

:Condition
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Condition" ;
	rdfs:comment "" ;
.

:Constant
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Constant" ;
	rdfs:comment "A constant value." ;
.

:Continue
	a owl:Class ;
	rdfs:subClassOf :BaseGoto ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Continue" ;
	rdfs:comment "" ;
.

:Convert
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Convert" ;
	rdfs:comment "A cast or conversion operation, such as (SampleType)obj in C#or CType(obj, SampleType) in Visual Basic. For a numeric conversion, if the converted value is too large for the destination type, no exception is thrown." ;
.

:ConvertChecked
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Convert checked" ;
	rdfs:comment "A cast or conversion operation, such as (SampleType)obj in C#or CType(obj, SampleType) in Visual Basic. For a numeric conversion, if the converted value does not fit the destination type, an exception is thrown." ;
.

:DebugInfo
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "DebugInfo" ;
	rdfs:comment "" ;
.

:Decrement
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Decrement" ;
	rdfs:comment "A unary decrement operation, such as (a - 1) in C# and Visual Basic. The object a should not be modified in place." ;
.

:Default
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Default" ;
	rdfs:comment "A default value." ;
.

:Dynamic
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Dynamic" ;
	rdfs:comment "" ;
.

:ElementInit
	a owl:Class ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "ElementInit" ;
	rdfs:comment "" ;
.

:Expression
	a owl:Class ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Expression" ;
	rdfs:comment "" ;
.

:ExpressionType
	a owl:Class ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Expression type" ;
	rdfs:comment "" ;
.

:Field
	a owl:Class ;
	rdfs:subClassOf :MemberAccess ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Field" ;
	rdfs:comment "" ;
.

:Goto
	a owl:Class ;
	rdfs:subClassOf :BaseGoto ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Goto" ;
	rdfs:comment "A 'go to' expression, such as goto Label in C# or GoTo Label in Visual Basic." ;
.

:Increment
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Increment" ;
	rdfs:comment "A unary increment operation, such as (a + 1) in C# and Visual Basic. The object a should not be modified in place." ;
.

:Invoke
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Invoke" ;
	rdfs:comment "An operation that invokes a delegate or lambda expression, such as sampleDelegate.Invoke()." ;
.

:InvokeMember
	a owl:Class ;
	rdfs:subClassOf :Binder ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Invoke member" ;
	rdfs:comment "" ;
.

:IsFalse
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Is false" ;
	rdfs:comment "A false condition value." ;
.

:IsTrue
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Is true" ;
	rdfs:comment "A true condition value." ;
.

:Label
	a owl:Class ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Label" ;
	rdfs:comment "A label." ;
.

:Lambda
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Lambda" ;
	rdfs:comment "A lambda expression, such as a => a + a in C# or Function(a) a + a in Visual Basic." ;
.

:ListBind
	a owl:Class ;
	rdfs:subClassOf :BaseBind ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "List bind" ;
	rdfs:comment "" ;
.

:ListInit
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "List init" ;
	rdfs:comment "" ;
.

:Loop
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Loop" ;
	rdfs:comment "A loop, such as for or while." ;
.

:Member
	a owl:Class ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Member" ;
	rdfs:comment "" ;
.

:MemberAccess
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "MemberAccess" ;
	rdfs:comment "" ;
.

:MemberBind
	a owl:Class ;
	rdfs:subClassOf :BaseBind ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Member bind" ;
	rdfs:comment "" ;
.

:MemberInit
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Member init" ;
	rdfs:comment "" ;
.

:Method
	a owl:Class ;
	rdfs:subClassOf :Member ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Method" ;
	rdfs:comment "" ;
.

:Negate
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Negate" ;
	rdfs:comment "An arithmetic negation operation, such as (-a). The object a should not be modified in place." ;
.

:NegateChecked
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Negate checked" ;
	rdfs:comment "An arithmetic negation operation, such as (-a), that has overflow checking. The object a should not be modified in place." ;
.

:New
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "New" ;
	rdfs:comment "An operation that calls a constructor to create a new object, such as new SampleType()." ;
.

:NewArray
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "New array" ;
	rdfs:comment "" ;
.

:NewArrayBounds
	a owl:Class ;
	rdfs:subClassOf :NewArray ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "New array bounds" ;
	rdfs:comment "An operation that creates a new array, in which the bounds for each dimension are specified, such as new SampleType[dim1, dim2] in C# or New SampleType(dim1, dim2) in Visual Basic." ;
.

:NewArrayInit
	a owl:Class ;
	rdfs:subClassOf :NewArray ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "New array init" ;
	rdfs:comment "" ;
.

:Not
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Not" ;
	rdfs:comment "A bitwise complement or logical negation operation. In C#, it is equivalent to (~a) for integral types and to (!a) for Boolean values. In Visual Basic, it is equivalent to (Not a). The object a should not be modified in place." ;
.

:OnesComplement
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Ones complement" ;
	rdfs:comment "A ones complement operation, such as (~a) in C#." ;
.

:Parameter
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Parameter" ;
	rdfs:comment "A reference to a parameter or variable that is defined in the context of the expression. For more information, see ParameterExpression." ;
.

:PostDecrementAssign
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Post decrement assign" ;
	rdfs:comment "A unary postfix decrement, such as (a--). The object a should be modified in place." ;
.

:PostIncrementAssign
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Post increment assign" ;
	rdfs:comment "A unary postfix increment, such as (a++). The object a should be modified in place." ;
.

:PreDecrementAssign
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Pre decrement assign" ;
	rdfs:comment "A unary prefix decrement, such as (--a). The object a should be modified in place." ;
.

:PreIncrementAssign
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Pre increment assign" ;
	rdfs:comment "A unary prefix increment, such as (++a). The object a should be modified in place." ;
.

:Property
	a owl:Class ;
	rdfs:subClassOf :MemberAccess ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Property" ;
	rdfs:comment "" ;
.

:Quote
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Quote" ;
	rdfs:comment "An expression that has a constant value of type Expression. A Quote node can contain references to parameters that are defined in the context of the expression it represents." ;
.

:ReferenceEqual
	a owl:Class ;
	rdfs:subClassOf :Binary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Reference equal" ;
	rdfs:comment "" ;
.

:ReferenceNotEqual
	a owl:Class ;
	rdfs:subClassOf :Binary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Reference not equal" ;
	rdfs:comment "" ;
.

:Return
	a owl:Class ;
	rdfs:subClassOf :BaseGoto ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Return" ;
	rdfs:comment "" ;
.

:RuntimeVariables
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Runtime variables" ;
	rdfs:comment "" ;
.

:Switch
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Switch" ;
	rdfs:comment "" ;
.

:SymbolDocument
	a owl:Class ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Symbol document" ;
	rdfs:comment "" ;
.

:Target
	a owl:Class ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Target" ;
	rdfs:comment "Used to represent the target of a GotoExpression." ;
.

:Throw
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Throw" ;
	rdfs:comment "An operation that throws an exception, such as throw new Exception()." ;
.

:Try
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Try" ;
	rdfs:comment "A try-catch expression." ;
.

:Type
	a owl:Class ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Type" ;
	rdfs:comment "" ;
.

:TypeAs
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Type as" ;
	rdfs:comment "An explicit reference or boxing conversion in which null is supplied if the conversion fails, such as (obj as SampleType) in C# or TryCast(obj, SampleType) in Visual Basic." ;
.

:Unary
	a owl:Class ;
	rdfs:subClassOf :Expression ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Unary" ;
	rdfs:comment "" ;
.

:UnaryPlus
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Unary plus" ;
	rdfs:comment "A unary plus operation, such as (+a). The result of a predefined unary plus operation is the value of the operand, but user-defined implementations might have unusual results." ;
.

:Unbox
	a owl:Class ;
	rdfs:subClassOf :Unary ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Unbox" ;
	rdfs:comment "An unbox value type operation, such as unbox and unbox.any instructions in MSIL." ;
.

:Variable
	a owl:Class ;
	rdfs:subClassOf :Parameter ;
	rdfs:isDefinedBy this:schema ;
	rdfs:label "Variable" ;
	rdfs:comment "" ;
.

# Properties

:arrayAccessArray
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :ArrayAccess ;
	rdfs:range :Expression ;
	rdfs:label "array access array" ;
	rdfs:comment "" ;
.

:arrayAccessIndexes
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :ArrayAccess ;
	rdfs:range rdf:List ;
	rdfs:label "array access indexes" ;
	rdfs:comment "" ;
.

:arrayIndexArray
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :ArrayIndex ;
	rdfs:range :Expression ;
	rdfs:label "array index array" ;
	rdfs:comment "" ;
.

:arrayIndexIndex
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :ArrayIndex ;
	rdfs:range :Expression ;
	rdfs:label "array index index" ;
	rdfs:comment "" ;
.

:arrayIndexIndexes
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :ArrayIndex ;
	rdfs:range rdf:List ;
	rdfs:label "array index indexes" ;
	rdfs:comment "" ;
.

:binaryExpressionType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Binary ;
	rdfs:range :ExpressionType ;
	rdfs:label "binary expression type" ;
	rdfs:comment "" ;
.

:binaryLeft
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Binary ;
	rdfs:range :Expression ;
	rdfs:label "binary left" ;
	rdfs:comment "" ;
.

:binaryRight
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Binary ;
	rdfs:range :Expression ;
	rdfs:label "binary right" ;
	rdfs:comment "" ;
.

:binderArguments
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Binder ;
	rdfs:range rdf:List ;
	rdfs:label "binder arguments" ;
	rdfs:comment "" ;
.

:binderExpressionType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Binder ;
	rdfs:range :ExpressionType ;
	rdfs:label "binder expression type" ;
	rdfs:comment "" ;
.

:binderName
	a owl:DatatypeProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Binder ;
	rdfs:range xsd:string ;
	rdfs:label "binder name" ;
	rdfs:comment "" ;
.

:bindExpression
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Bind ;
	rdfs:range :Expression ;
	rdfs:label "bind expression" ;
	rdfs:comment "" ;
.

:bindMember
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :BaseBind ;
	rdfs:range :Member ;
	rdfs:label "bind member" ;
	rdfs:comment "" ;
.

:blockExpressions
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Block ;
	rdfs:range rdf:List ;
	rdfs:label "block expressions" ;
	rdfs:comment "" ;
.

:blockVariables
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Block ;
	rdfs:range rdf:List ;
	rdfs:label "block variables" ;
	rdfs:comment "" ;
.

:callArguments
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Call ;
	rdfs:range rdf:List ;
	rdfs:label "call arguments" ;
	rdfs:comment "" ;
.

:callInstance
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Call ;
	rdfs:range :Expression ;
	rdfs:label "call instance" ;
	rdfs:comment "" ;
.

:callMethod
	a owl:DatatypeProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Call ;
	rdfs:range xsd:string ;
	rdfs:label "call method" ;
	rdfs:comment "" ;
.

:callType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Call ;
	rdfs:range :Type ;
	rdfs:label "call type" ;
	rdfs:comment "" ;
.

:callTypeArguments
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Call ;
	rdfs:range rdf:List ;
	rdfs:label "call type arguments" ;
	rdfs:comment "" ;
.

:caseBody
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Case ;
	rdfs:range :Expression ;
	rdfs:label "case body" ;
	rdfs:comment "" ;
.

:caseTestValues
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Case ;
	rdfs:range rdf:List ;
	rdfs:label "case test values" ;
	rdfs:comment "" ;
.

:catchBody
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Catch ;
	rdfs:range :Expression ;
	rdfs:label "catch body" ;
	rdfs:comment "" ;
.

:catchFilter
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Catch ;
	rdfs:range :Expression ;
	rdfs:label "catch filter" ;
	rdfs:comment "" ;
.

:catchType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Catch ;
	rdfs:range :Type ;
	rdfs:label "catch type" ;
	rdfs:comment "" ;
.

:catchVariable
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Catch ;
	rdfs:range :Parameter ;
	rdfs:label "catch variable" ;
	rdfs:comment "" ;
.

:conditionIfFalse
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Condition ;
	rdfs:range :Expression ;
	rdfs:label "condition if false" ;
	rdfs:comment "" ;
.

:conditionIfTrue
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Condition ;
	rdfs:range :Expression ;
	rdfs:label "condition if true" ;
	rdfs:comment "" ;
.

:conditionTest
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Condition ;
	rdfs:range :Expression ;
	rdfs:label "condition test" ;
	rdfs:comment "" ;
.

:conditionType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Condition ;
	rdfs:range :Type ;
	rdfs:label "condition type" ;
	rdfs:comment "" ;
.

:constantType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Constant ;
	rdfs:range :Type ;
	rdfs:label "constant type" ;
	rdfs:comment "" ;
.

:constantValue
	a owl:DatatypeProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Constant ;
	rdfs:range rdfs:Resource ;
	rdfs:label "constant value" ;
	rdfs:comment "" ;
.

:debugInfoDocument
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :DebugInfo ;
	rdfs:range :SymbolDocument ;
	rdfs:label "debug info document" ;
	rdfs:comment "" ;
.

:debugInfoEndColumn
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :DebugInfo ;
	rdfs:range xsd:int ;
	rdfs:label "debug info end column" ;
	rdfs:comment "" ;
.

:debugInfoEndLine
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :DebugInfo ;
	rdfs:range xsd:int ;
	rdfs:label "debug info end Line" ;
	rdfs:comment "" ;
.

:debugInfoStartColumn
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :DebugInfo ;
	rdfs:range xsd:int ;
	rdfs:label "debug info start column" ;
	rdfs:comment "" ;
.

:debugInfoStartLine
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :DebugInfo ;
	rdfs:range xsd:int ;
	rdfs:label "debug info start Line" ;
	rdfs:comment "" ;
.

:defaultType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Default ;
	rdfs:range :Type ;
	rdfs:label "default type" ;
	rdfs:comment "" ;
.

:dynamicArguments
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Dynamic ;
	rdfs:range rdf:List ;
	rdfs:label "dynamic arguments" ;
	rdfs:comment "" ;
.

:dynamicBinder
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Dynamic ;
	rdfs:range :Binder ;
	rdfs:label "dynamic binder" ;
	rdfs:comment "" ;
.

:dynamicReturnType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Dynamic ;
	rdfs:range :Type ;
	rdfs:label "dynamic return type" ;
	rdfs:comment "" ;
.

:elementInitAddMethod
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :ElementInit ;
	rdfs:range :Method ;
	rdfs:label "element init add method" ;
	rdfs:comment "" ;
.

:elementInitArguments
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :ElementInit ;
	rdfs:range rdf:List ;
	rdfs:label "element init arguments" ;
	rdfs:comment "" ;
.

:gotoTarget
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :BaseGoto ;
	rdfs:range :Label ;
	rdfs:label "goto target" ;
	rdfs:comment "" ;
.

:gotoType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :BaseGoto ;
	rdfs:range :Type ;
	rdfs:label "goto type" ;
	rdfs:comment "" ;
.

:gotoValue
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :BaseGoto ;
	rdfs:range :Expression ;
	rdfs:label "goto value" ;
	rdfs:comment "" ;
.

:invokeArguments
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Invoke ;
	rdfs:range rdf:List ;
	rdfs:label "invoke arguments" ;
	rdfs:comment "" ;
.

:invokeExpression
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Invoke ;
	rdfs:range :Expression ;
	rdfs:label "invoke expression" ;
	rdfs:comment "" ;
.

:labelDefaultValue
	a owl:DatatypeProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Label ;
	rdfs:range :Expression ;
	rdfs:label "label default value" ;
	rdfs:comment "" ;
.

:labelTarget
	a owl:DatatypeProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Label ;
	rdfs:range :LabelTarget ;
	rdfs:label "label target" ;
	rdfs:comment "" ;
.

:lambdaBody
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Lambda ;
	rdfs:range :Expression ;
	rdfs:label "lambda body" ;
	rdfs:comment "" ;
.

:lambdaParameters
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Lambda ;
	rdfs:range rdf:List ;
	rdfs:label "lambda parameters" ;
	rdfs:comment "" ;
.

:listBindInitializers
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :ListBind ;
	rdfs:range rdf:List ;
	rdfs:label "list bind initializers" ;
	rdfs:comment "" ;
.

:listInitInitializers
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :ListInit ;
	rdfs:range rdf:List ;
	rdfs:label "list init initializers" ;
	rdfs:comment "" ;
.

:listInitNewExpression
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :ListInit ;
	rdfs:range :New ;
	rdfs:label "list init new expression" ;
	rdfs:comment "" ;
.

:loopBody
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Loop ;
	rdfs:range :Expression ;
	rdfs:label "loop body" ;
	rdfs:comment "" ;
.

:loopBreak
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Loop ;
	rdfs:range :Label ;
	rdfs:label "loop break" ;
	rdfs:comment "" ;
.

:loopContinue
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Loop ;
	rdfs:range :Label ;
	rdfs:label "loop continue" ;
	rdfs:comment "" ;
.

:memberAccessExpression
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :MemberAccess ;
	rdfs:range :Expression ;
	rdfs:label "member access expression" ;
	rdfs:comment "" ;
.

:memberAccessName
	a owl:Datatype ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :MemberAccess ;
	rdfs:range xsd:string ;
	rdfs:label "member access name" ;
	rdfs:comment "" ;
.

:memberAccessType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :MemberAccess ;
	rdfs:range :Type ;
	rdfs:label "member access type" ;
	rdfs:comment "" ;
.

:memberBindBindings
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :MemberBind ;
	rdfs:range rdf:List ;
	rdfs:label "member bind bindings" ;
	rdfs:comment "" ;
.

:memberInitBindings
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :MemberInit ;
	rdfs:range rdf:List ;
	rdfs:label "member init bindings" ;
	rdfs:comment "" ;
.

:memberInitNewExpression
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :MemberInit ;
	rdfs:range :New ;
	rdfs:label "member init new expression" ;
	rdfs:comment "" ;
.

:memberName
	a owl:DatatypeProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Member ;
	rdfs:range :xsd:string ;
	rdfs:label "member name" ;
	rdfs:comment "" ;
.

:memberType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Member ;
	rdfs:range :Type ;
	rdfs:label "member type" ;
	rdfs:comment "" ;
.

:newArguments
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :New ;
	rdfs:range rdf:List ;
	rdfs:label "new arguments" ;
	rdfs:comment "" ;
.

:newArrayExpressions
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :NewArray ;
	rdfs:range rdf:List ;
	rdfs:label "new array expressions" ;
	rdfs:comment "" ;
.

:newArrayType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :NewArray ;
	rdfs:range :Type ;
	rdfs:label "new array type" ;
	rdfs:comment "" ;
.

:newType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :New ;
	rdfs:range :Type ;
	rdfs:label "new type" ;
	rdfs:comment "" ;
.

:parameterName
	a owl:DatatypeProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Parameter ;
	rdfs:range xsd:string ;
	rdfs:label "parameter name" ;
	rdfs:comment "" ;
.

:parameterType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Parameter ;
	rdfs:range :Type ;
	rdfs:label "parameter type" ;
	rdfs:comment "" ;
.

:propertyArguments
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Property ;
	rdfs:range rdf:List ;
	rdfs:label "property arguments" ;
	rdfs:comment "" ;
.

:runtimeVariablesVariables
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :RuntimeVariables ;
	rdfs:range rdf:List ;
	rdfs:label "runtime variables variables" ;
	rdfs:comment "" ;
.

:switchCases
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Switch ;
	rdfs:range rdf:List ;
	rdfs:label "switch cases" ;
	rdfs:comment "" ;
.

:switchComparison
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Switch ;
	rdfs:range :Method ;
	rdfs:label "switch comparison" ;
	rdfs:comment "" ;
.

:switchDefaultBody
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Switch ;
	rdfs:range :Expression ;
	rdfs:label "switch default body" ;
	rdfs:comment "" ;
.

:switchSwitchValue
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Switch ;
	rdfs:range :Expression ;
	rdfs:label "switch switch value" ;
	rdfs:comment "" ;
.

:switchType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Switch ;
	rdfs:range :Type ;
	rdfs:label "switch type" ;
	rdfs:comment "" ;
.

:symbolDocumentDocumentType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Switch ;
	rdfs:range rdfs:Resource ;
	rdfs:label "symbol document document type" ;
	rdfs:comment "" ;
.

:symbolDocumentFileName
	a owl:DatatypeProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :SymbolDocument ;
	rdfs:range xsd:string ;
	rdfs:label "symbol document filename" ;
	rdfs:comment "" ;
.

:symbolDocumentLanguage
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Switch ;
	rdfs:range rdfs:Resource ;
	rdfs:label "symbol document language" ;
	rdfs:comment "" ;
.

:symbolDocumentLanguageVendor
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Switch ;
	rdfs:range rdfs:Resource ;
	rdfs:label "symbol document language vendor" ;
	rdfs:comment "" ;
.

:targetName
	a owl:DatatypeProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Target ;
	rdfs:range xsd:string ;
	rdfs:label "target name" ;
	rdfs:comment "" ;
.

:targetType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Target ;
	rdfs:range :Type ;
	rdfs:label "target type" ;
	rdfs:comment "" ;
.

:tryBody
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Try ;
	rdfs:range :Expression ;
	rdfs:label "try body" ;
	rdfs:comment "" ;
.

:tryFault
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Try ;
	rdfs:range :Expression ;
	rdfs:label "try fault" ;
	rdfs:comment "" ;
.

:tryFinally
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Try ;
	rdfs:range :Expression ;
	rdfs:label "try finally" ;
	rdfs:comment "" ;
.

:tryHandlers
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Try ;
	rdfs:range rdf:List ;
	rdfs:label "try handlers" ;
	rdfs:comment "" ;
.

:tryType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Try ;
	rdfs:range :Type ;
	rdfs:label "try type" ;
	rdfs:comment "" ;
.

:typeArguments
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Type ;
	rdfs:range rdf:List ;
	rdfs:label "type arguments" ;
	rdfs:comment "" ;
.

:typeName
	a owl:DatatypeProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Type ;
	rdfs:range xsd:string ;
	rdfs:label "type name" ;
	rdfs:comment "" ;
.

:unaryOperand
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Unary ;
	rdfs:range :Expression ;
	rdfs:label "unary operand" ;
	rdfs:comment "" ;
.

:unaryType
	a owl:ObjectProperty ;
	rdfs:isDefinedBy this:schema ;
	rdfs:domain :Unary ;
	rdfs:range :Type ;
	rdfs:label "unary type" ;
	rdfs:comment "" ;
.
