// MIT License, Copyright 2019 Samu Lang

<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq.Expressions" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".generated.cs" #>
<#
    GenerateNamespace();
#>

<#+
private void GenerateNamespace()
{#>
namespace GraphEngine
{
    using VDS.RDF;

    public static partial class Vocabulary
    {<#+
    GenerateProperties();
#>    }
}<#+}

private void GenerateProperties()
{
    foreach(var item in Data)
    {#>

        public static IUriNode <#= item.Property #> { get; } = EngineNode("<#= item.Uri #>");
<#+}
}

private IEnumerable<(string Property, string Uri)> Data {
    get
    {
        // Classes
        yield return ("Add", "Add");
        yield return ("AddAssign", "AddAssign");
        yield return ("AddAssignChecked", "AddAssignChecked");
        yield return ("AddChecked", "AddChecked");
        yield return ("And", "And");
        yield return ("AndAlso", "AndAlso");
        yield return ("AndAssign", "AndAssign");
        yield return ("ArrayAccess", "ArrayAccess");
        yield return ("ArrayIndex", "ArrayIndex");
        yield return ("ArrayLength", "ArrayLength");
        yield return ("Assign", "Assign");
        yield return ("Block", "Block");
        yield return ("Break", "Break");
        yield return ("Call", "Call");
        yield return ("Coalesce", "Coalesce");
        yield return ("Condition", "Condition");
        yield return ("Constant", "Constant");
        yield return ("Continue", "Continue");
        yield return ("Convert", "Convert");
        yield return ("ConvertChecked", "ConvertChecked");
        yield return ("Decrement", "Decrement");
        yield return ("Default", "Default");
        yield return ("Divide", "Divide");
        yield return ("DivideAssign", "DivideAssign");
        yield return ("Empty", "Empty");
        yield return ("Equal", "Equal");
        yield return ("ExclusiveOr", "ExclusiveOr");
        yield return ("ExclusiveOrAssign", "ExclusiveOrAssign");
        yield return ("Goto", "Goto");
        yield return ("GreaterThan", "GreaterThan");
        yield return ("GreaterThanOrEqual", "GreaterThanOrEqual");
        yield return ("Increment", "Increment");
        yield return ("Invoke", "Invoke");
        yield return ("IsFalse", "IsFalse");
        yield return ("IsTrue", "IsTrue");
        yield return ("Label", "Label");
        yield return ("Lambda", "Lambda");
        yield return ("LeftShift", "LeftShift");
        yield return ("LeftShiftAssign", "LeftShiftAssign");
        yield return ("LessThan", "LessThan");
        yield return ("LessThanOrEqual", "LessThanOrEqual");
        yield return ("Loop", "Loop");
        yield return ("Modulo", "Modulo");
        yield return ("ModuloAssign", "ModuloAssign");
        yield return ("Multiply", "Multiply");
        yield return ("MultiplyAssign", "MultiplyAssign");
        yield return ("MultiplyAssignChecked", "MultiplyAssignChecked");
        yield return ("MultiplyChecked", "MultiplyChecked");
        yield return ("Negate", "Negate");
        yield return ("NegateChecked", "NegateChecked");
        yield return ("New", "New");
        yield return ("NewArrayBounds", "NewArrayBounds");
        yield return ("Not", "Not");
        yield return ("NotEqual", "NotEqual");
        yield return ("OnesComplement", "OnesComplement");
        yield return ("Or", "Or");
        yield return ("OrAssign", "OrAssign");
        yield return ("OrElse", "OrElse");
        yield return ("Parameter", "Parameter");
        yield return ("ParameterName", "parameterName");
        yield return ("PostDecrementAssign", "PostDecrementAssign");
        yield return ("PostIncrementAssign", "PostIncrementAssign");
        yield return ("Power", "Power");
        yield return ("PowerAssign", "PowerAssign");
        yield return ("PreDecrementAssign", "PreDecrementAssign");
        yield return ("PreIncrementAssign", "PreIncrementAssign");
        yield return ("Quote", "Quote");
        yield return ("Return", "Return");
        yield return ("RightShift", "RightShift");
        yield return ("RightShiftAssign", "RightShiftAssign");
        yield return ("Subtract", "Subtract");
        yield return ("SubtractAssign", "SubtractAssign");
        yield return ("SubtractAssignChecked", "SubtractAssignChecked");
        yield return ("SubtractChecked", "SubtractChecked");
        yield return ("Throw", "Throw");
        yield return ("Try", "Try");
        yield return ("TypeAs", "TypeAs");
        yield return ("UnaryPlus", "UnaryPlus");
        yield return ("Unbox", "Unbox");
        yield return ("Variable", "Variable");

        // Properties
        yield return ("ArrayAccessArray", "arrayAccessArray");
        yield return ("ArrayAccessIndexes", "arrayAccessIndexes");
        yield return ("BinaryLeft", "binaryLeft");
        yield return ("BinaryRight", "binaryRight");
        yield return ("BlockExpressions", "blockExpressions");
        yield return ("BlockVariables", "blockVariables");
        yield return ("CallArguments", "callArguments");
        yield return ("CallInstance", "callInstance");
        yield return ("CallMethod", "callMethod");
        yield return ("CallType", "callType");
        yield return ("CallTypeArguments", "callTypeArguments");
        yield return ("CatchBody", "catchBody");
        yield return ("CatchFilter", "catchFilter");
        yield return ("CatchType", "catchType");
        yield return ("CatchVariable", "catchVariable");
        yield return ("ConditionIfTrue", "conditionIfTrue");
        yield return ("ConditionIfFalse", "conditionIfFalse");
        yield return ("ConditionTest", "conditionTest");
        yield return ("ConditionType", "conditionType");
        yield return ("ConstantType", "constantType");
        yield return ("ConstantValue", "constantValue");
        yield return ("DefaultType", "defaultType");
        yield return ("GotoTarget", "gotoTarget");
        yield return ("GotoType", "gotoType");
        yield return ("GotoValue", "gotoValue");
        yield return ("InvokeArguments", "invokeArguments");
        yield return ("InvokeExpression", "invokeExpression");
        yield return ("LabelDefaultValue", "labelDefaultValue");
        yield return ("LabelTarget", "labelTarget");
        yield return ("LambdaBody", "lambdaBody");
        yield return ("LambdaParameters", "lambdaParameters");
        yield return ("LoopBody", "loopBody");
        yield return ("LoopBreak", "loopBreak");
        yield return ("LoopContinue", "loopContinue");
        yield return ("NewArguments", "newArguments");
        yield return ("NewArrayBoundsBounds", "newArrayBoundsBounds");
        yield return ("NewArrayBoundsType", "newArrayBoundsType");
        yield return ("NewType", "newType");
        yield return ("ParameterType", "parameterType");
        yield return ("TargetName", "targetName");
        yield return ("TargetType", "targetType");
        yield return ("TryBody", "tryBody");
        yield return ("TryFault", "tryFault");
        yield return ("TryFinally", "tryFinally");
        yield return ("TryHandlers", "tryHandlers");
        yield return ("TryType", "tryType");
        yield return ("TypeArguments", "typeArguments");
        yield return ("TypeName", "typeName");
        yield return ("UnaryOperand", "unaryOperand");
        yield return ("UnaryType", "unaryType");
    }
}
#>